version: "3.3"

services:
  app:
    user: root
    build:
      context: ../
      target: staging
    restart: always
    ports:
      - 4000:4000
    volumes:
      - ../src:/app/src
      - ./logs:/app/logs
    environment:
      - TZ=Asia/Bangkok
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

    depends_on:
      - kafka

  zookeeper:
    image: bitnami/zookeeper:latest
    user: root
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_SERVER_ID=2
    volumes:
      - ./bitnami/zookeeper:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    user: root
    restart: always
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./bitnami/kafka:/bitnami/kafka
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    user: root
    restart: always
    ports:
      - 8000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - TZ=Asia/Bangkok
    depends_on:
      - kafka

volumes:
  src:
    driver: local
